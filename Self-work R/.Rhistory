summary(iris[1:50, ])
summary(iris[51:100,])
summary(iris[101:,])
summary(iris[101:150,])
naciento <- 04-04-1994
naciemiento
hoy <- 26-09-2017
hoy - nacimiento
hoy - naciento
clear
nacimiento <- as.Date("1994-04-04")
hoy <- as.Date("2017-09-26")
hoy - nacimiento
1994 + 70
muerte <- as.Date("2064-04-04")
muerte-hoy
16992 / 365.25
weekdays(nacimiento)
weekdays(muerte)
weekdays(hoy)
month(muerte)
months(muerte)
months(hoy)
months(nacimiento)
Sys.getlocale()
Sys.getlocale("LC_ALL")
Sys.getlocale("LC_ALL", "esp")
Sys.setlocale("LC_ALL", "esp")
Sys.setlocale("LC_ALL", "vas")
Sys.setlocale("LC_ALL", "Basque")
sys.setlocale("LC_ALL", "Basque")
Sys.setlocale("LC_ALL", "Basque")
which(is.na(Iris))  # si el dato es missing True, nos
Iris = data("Iris")
Iris = data("iris")
Iris = data("iris")
which(is.na(Iris))  # si el dato es missing True, nos
which(is.na(Iris), arr.ind = TRUE)
boxplot(mgp~cyl, Iris, main = 'primer boxplot con R', xlab = "eje x", ylab = "ylab")
boxplot(mgp~cyl, Iris, main = "primer boxplot con R", xlab = "eje x", ylab = "ylab")
install.packages(""datasets.load"")
install.packages(datasets.load")
mclwncsa
c kejaf aca
-sda
cnnkd
mankcsa
cknasc a
as a
nkanc
alcpmalksmclac+
install.packages("datasets")
install.packages("datasets")
load("iris")
data("iris")
iris
x <- iris[,1:2]
x
x <- iris[,1]
x
len(x)
dim(x)
summary(x)
x <- c(1:100)
y <- c(1:2:200)
y <- c(1:200:2)
y <- 2*x
plot(x, y)
xlabel("ejex")
plot(x, y, xlabel= "ejeX")
X = iris[,1]
X
length()
length(C)
length(X)
Y <- c(1:150)
length(Y)
plot(Y, X)
par(mfrow = x(1;4))
par(mfrow = x(1:4))
par(mfrow = c(1:4))
graphics.off()
par(mfrow = c(1:4))
par(mfrow = c(1, 4))
for (i in 1:4){}
for (i in 1:4){}
for (i in 1:4){plot(Y, iris[, i])}
summary(data("iris"))
Iris <- data("iris")
summary(Iris)
Iris_setosa = iris[iris == "setosa"]
Iris_setosa
data("iris")
Iris_setosa = iris[iris == "setosa"]
Iris_setosa
Iris_setosa[1:20, 1]
Iris_setosa[1:50, 1]
plot(vector)
vector
plot(p)
p <- c(1:20)
plot(p)
plot(p, type = "0", col = "blue")     # blue points overlayed by a line
plot(p, type = "o", col = "blue")     # blue points overlayed by a line
p <- c(1:20)
title("ponints", col.main = "red", font.main = 4)
p <- c(2, 3, 4.3, 2, 4, 3, 5, 4)
plot(p)         # just points
title("points", col.main = "red", font.main = 4)
plot(p, type = "o", col = "blue")     # blue points overlayed by a line
title("points", col.main = "red", font.main = 4)
title(main = "Money spend during a week", col.main = "red", font = 4)
graphics.off() # close all the graphics
dinner_spend <- c(10, 10, 10, 15.5, 10, 13, 17)
plot(lunch_spend, type = "o", col = "blue", ylimit = c(0, 6))     # using a y axis in a range (0, 6)
lines(dinner_spend, type = "o", pch = 22, lty = 2, col = "red") # red dashed line and square points
plot(lunch_spend, type = "o", col = "blue", ylim = c(0, 6))     # using a y axis in a range (0, 6)
lunch_spend <- c(10.99, 9, 6.1, 9.50, 6.30, 12, 18)
plot(lunch_spend, type = "o", col = "blue", ylim = c(0, 6))     # using a y axis in a range (0, 6)
plot(lunch_spend, type = "o", col = "blue")
plot(lunch_spend, type = "o", col = "blue", ylim = c(1, 12))
plot(lunch_spend, type = "o", col = "blue")     # using a y axis in a range (0, 6)
c = 1:10
c
mac(c)
max(c)
plot(lunch_spend, type = "o", col = "blue", ylim = c(1, max(lunch_spend) + 1))
lines(dinner_spend, type = "o", pch = 22, lty = 2, col = "red")
title("Money spend in food", col.main = "red", font.main = 4)
length((c))
graphics.off()
plot(lunch_spend, type = "o", col = "blue")     # using a y axis in a range (0, 6)
title("Lunch spend during a week", col.main = "red", font.main = 4)
plot(X)         # just points
plot(X)         # just points
X <- c(10.99, 9, 6.1, 9.50, 6.30, 12, 18)
plot(X)         # just points
plot(X, type = "o", col = "blue")     # blue points overlayed by a line, just that
"testeando los comentarios multiínea en R"
"coment"
/* comentario multilínea en R */
''
'''
aknda
oaneac
wevoan
x <- matrix(1:6, nrow = 2)
y <- 2*x
matplot(x, y) # just matplot, with no parameters
x <- matrix(1:45, nrow = 5)
y <- 2*x
matplot(x, y) # just matplot, with no parameters
matplot(x, y, type = 'o')
matplot(x, y, type = 'o')
matplot(x, y) # just matplot, with no parameters
matplot(x, y, type = 'o')
matplot(x, y, type = 'o', col = "black")
matplot(x, y, type = 'o', col = "black", lend = "p")
matplot(x, y, type = 'o', col = "black")
matplot(x, y, type = 'o', col = "black", lend = "p")
matplot(x, y, type = 'o', col = "black")
lends <- c("round","butt","square")
matplot(x, y, type = 'o', col = "black", lend = lends)
lends <- c("round","butt","square")
matplot(x, y, type = 'o', col = "black", lend = lends)
matplot(x, y, type = 'c', col = "black", lend = lends)
lends <- c("round","butt","square")
matplot(x, y, type = 'c', col = "black", lend = lends)
y <- 2*x
matplot(x, y) # just matplot, with no parameters
matplot(x, y, type = 'o', col = "black")
lends <- c("round","butt","square")
matplot(x, y, type = 'c', col = "black", lend = lends)
matplot(x, y, type = 'c', col = "black", lend = lends)
matplot(x, y, type = 'c', col = "black")
matplot(x, y, type = 'c', col = "black")
matplot(x, y, type = 'l', col = "black")
matplot(x, y, type = 'l', col = c("black", "red"))
data("iris")
matplot(iris)
summary(iris)
matplot(iris$Sepal.Length, main = "Sepal Length")
matplot(iris$Sepal.Length, main = "Sepal Length", ylab = "", sub = "of all the set")
matplot(iris[1:50, ]$Sepal.Length)
matplot(iris[1:50, ]$Sepal.Length, main = "Setosa Sepal Length", ylab = "", sub ="just for Setosa"
matplot(iris$Sepal.Length, main = "Sepal Length", ylab = "", sub = "of all the set")
matplot(iris[1:50, ]$Sepal.Length, main = "Setosa Sepal Length", ylab = "", sub ="just for Setosa"
matplot(iris[1:50, ]$Sepal.Length, main = "Setosa Sepal Length", ylab = "", sub ="just for Setosa")
matplot(iris$Sepal.Length, main = "Sepal Length", ylab = "", sub = "of all the set")
matplot(iris[1:50, ]$Sepal.Length, main = "Setosa Sepal Length", ylab = "", sub ="just for Setosa")
matplot(iris[1:50, ]$Sepal.Length, style = "o", main = "Setosa Sepal Length", ylab = "", sub ="just for Setosa")
matplot(iris[1:50, ]$Sepal.Length, style = "o", main = "Setosa Sepal Length", ylab = "", sub ="just for Setosa")
matplot(iris[1:50, ]$Sepal.Length, type = "o", main = "Setosa Sepal Length", ylab = "", sub ="just for Setosa")
matplot(iris[1:50, ]$Sepal.Length, type = "p", main = "Setosa Sepal Length", ylab = "", sub ="p type")
matplot(iris[1:50, ]$Sepal.Length, type = "n", main = "Setosa Sepal Length", ylab = "", sub ="o type")
matplot(iris[1:50, ]$Sepal.Length, type = "b", main = "Setosa Sepal Length", ylab = "", sub ="o type")
matplot(iris[1:50, ]$Sepal.Length, type = "b", main = "Setosa Sepal Length", ylab = "", sub ="b type")
matplot(iris[1:50, ]$Sepal.Length, type = "o", main = "Setosa Sepal Length", ylab = "", sub ="o type", lend = "round")
matplot(iris[1:50, ]$Sepal.Length, type = "o", main = "Setosa Sepal Length", ylab = "", sub ="o type", lend = "round")
matplot(iris[1:50, ]$Sepal.Length, type = "o", main = "Setosa Sepal Length", ylab = "", sub ="o type, lend round", lend = "round")
matplot(iris[1:50, ]$Sepal.Length, type = "o", main = "Setosa Sepal Length", ylab = "", sub ="o type, lend square", lend = "square")
matplot(iris[1:50, ]$Sepal.Length, type = "o", main = "Setosa Sepal Length", ylab = "", sub ="o type, lend square", lend = "square")
matplot(iris[1:50, ]$Sepal.Length, type = "c", main = "Setosa Sepal Length", ylab = "", sub ="c type, lend square", lend = "square")
matplot(iris[1:50, ]$Sepal.Length, type = "c", main = "Setosa Sepal Length", ylab = "", sub ="c type, lend butt", lend = "butt")
plot()
boxplot(x)
x <- c(2, 32, 3, 24, 2, 34, 2, 423, 2, 4, 2, 32, 23, 2, 342)
boxplot(x)
x <- c(2, 4, 2, 3, 4, 5, 7, 4)
boxplot(x)
boxplot(x, horizontal = TRUE)
boxplot(x, varwidth = TRUE) #  make box plot widths proportional to the square root of the sample sizes
boxplot(x, horizontal = TRUE) # make it horizontal
boxplot(x, varwidth = TRUE) #  make box plot widths proportional to the square root of the sample sizes
boxplot(x)
boxplot(x, varwidth = TRUE) #  make box plot widths proportional to the square root of the sample sizes
boxplot(x, horizontal = TRUE) # make it horizontal
boxplot(iris)
boxplot(iris$Sepal.Length, main = "Sepal Length", sub = "all the flowers")
boxplot(iris[1:50, ]$Sepal.Length, main = "Sepal Length", sub = "only Setosa")
boxplot(iris[1:50, ]$Sepal.Length, main = "Sepal Length", sub = "only Setosa")
boxplot(iris$Sepal.Length, main = "Sepal Length", sub = "all the flowers")
boxplot(iris[1:50, ]$Sepal.Length, main = "Sepal Length", sub = "only Setosa")
par(nfrow = c(1, 3))
boxplot(iris[1:50, ]$Sepal.Length, main = "Sepal Length", sub = "only Setosa")
boxplot(iris[51:100, ]$Sepal.Length, main = "Sepal Length", sub = "only Versicolor")
par(mfrow = c(1, 3))
boxplot(iris[1:50, ]$Sepal.Length, main = "Sepal Length", sub = "only Setosa")
boxplot(iris[51:100, ]$Sepal.Length, main = "Sepal Length", sub = "only Versicolor")
boxplot(iris[101:150, ]$Sepal.Length, main = "Sepal Length", sub = "only Virginica")
summary(iris)
boxplot(iris$Petal.Length, main = "Petal Length", sub = "all the flowers")
par()
boxplot(iris$Petal.Length, main = "Petal Length", sub = "all the flowers")
boxplot(iris[1:50, ]$Sepal.Length, main = "Sepal Length", sub = "only Setosa")
boxplot(iris[51:100, ]$Sepal.Length, main = "Sepal Length", sub = "only Versicolor")
boxplot(iris[101:150, ]$Sepal.Length, main = "Sepal Length", sub = "only Virginica")
par()
boxplot(iris$Petal.Length, main = "Petal Length", sub = "all the flowers")
par(mfrow=c(1,1))
boxplot(iris$Petal.Length, main = "Petal Length", sub = "all the flowers")
boxplot(iris$Petal.Length, main = "Petal Length", sub = "all the flowers", col = "red")
boxplot(iris$Sepal.Length, main = "Sepal Length", sub = "all the flowers")
boxplot(iris[1:50, ]$Sepal.Length, main = "Sepal Length", sub = "only Setosa")
par(mfrow = c(1, 3))
boxplot(iris[1:50, ]$Sepal.Length, main = "Sepal Length", sub = "only Setosa")
boxplot(iris[51:100, ]$Sepal.Length, main = "Sepal Length", sub = "only Versicolor")
boxplot(iris[101:150, ]$Sepal.Length, main = "Sepal Length", sub = "only Virginica")
par(mfrow=c(1,1))     # ugly way to reset 'par'
boxplot(iris$Petal.Length, main = "Petal Length", sub = "all the flowers", col = "red")
g_range == range(0, max(Y))   # returns TRUE TRUE
plot(lunch_spend, type = "o", col = "blue", ylim = g_range, axes = FALSE, ann = FALSE)
lines(dinner_spend, type = "o", pch = 22, lty = 2, col = "red")
title("Money spend in food", col.main = "red", font.main = 4)
days <- c("Mond", "Tues", "Wed", "Thu", "Fri", "Sat", "Sun")
axis(1, at = 1:length(days), lab = days)
axis(2, at = 4 * grange[2])
iris
data("iris")
iris
pairs(iris)
head(iris)
summary(iris)
Lenght <- iris$Petal.Length
Width <- iris$Petal.Width
Lenght_setosa <- Lenght[1:50]
Width_setosa <-  Width[1:50]
Lenght_versicolor <- Lenght[51:100]
Width_versicolor <- Width[51:100]
Lenght_virginica <- Lenght[101:150]
Width_virginica <- Width[101:150]
cor(Lenght_setosa, Width_setosa)           # 0.33163
cor(Lenght_versicolor, Width_versicolor)   # 0.7866681
cor(Lenght_virginica, Width_virginica)     # 0.3221082
plot(Lenght_versicolor, Width_versicolor, xlab = "Longitud pétalos", ylab = "Anchura pétalos", type = "p", col = "black")
title("Versicolor", sub = "Relación entre los tamaños de los pétalos", col.main = "cadetblue", font.main = 4, cex.main = 5, col.sub = "grey", font.sub = 4, cex.main = .75)
regresion <- lm(Lenght_versicolor ~ Width_versicolor)
summary(regresion)
plot(Lenght_versicolor, Width_versicolor, xlab = "Longitud pétalos", ylab = "Anchura pétalos", type = "p", col = "black")
abline(regresion, col = "red")
abline(regresion, col = "red")
plot(Lenght_versicolor, Width_versicolor, xlab = "Longitud pétalos", ylab = "Anchura pétalos", type = "p", col = "black")
title("Versicolor", sub = "Relación entre los tamaños de los pétalos", col.main = "cadetblue", font.main = 4, cex.main = 5, col.sub = "grey", font.sub = 4, cex.main = .75)
regresion <- lm(Lenght_versicolor ~ Width_versicolor)
title("Versicolor", sub = "Relación entre los tamaños de los pétalos", col.main = "cadetblue", font.main = 4, cex.main = 10, col.sub = "grey", font.sub = 4, cex.main = .75)
regresion <- lm(Lenght_versicolor ~ Width_versicolor)
title("Versicolor", sub = "Relación entre los tamaños de los pétalos", col.main = "cadetblue", font.main = 4, cex.main = 10, col.sub = "grey", font.sub = 4, cex.main = .75)
regresion <- lm(Lenght_versicolor ~ Width_versicolor)
plot(Lenght_versicolor, Width_versicolor, xlab = "Longitud pétalos", ylab = "Anchura pétalos", type = "p", col = "black")
title("Versicolor", sub = "Relación entre los tamaños de los pétalos", col.main = "cadetblue", font.main = 4, cex.main = 10, col.sub = "grey", font.sub = 4, cex.main = .75)
regresion <- lm(Lenght_versicolor ~ Width_versicolor)
summary(regresion)
title("Versicolor", sub = "Relación entre los tamaños de los pétalos", col.main = "cadetblue", font.main = 4, cex.main = 10, col.sub = "grey")
title("Versicolor", sub = "Relación entre los tamaños de los pétalos", col.main = "cadetblue", font.main = 4, cex.main = 3, col.sub = "grey")
plot(Lenght_versicolor, Width_versicolor, xlab = "Longitud pétalos", ylab = "Anchura pétalos", type = "p", col = "black")
title("Versicolor", sub = "Relación entre los tamaños de los pétalos", col.main = "cadetblue", font.main = 4, cex.main = 3, col.sub = "grey")
regresion <- lm(Lenght_versicolor ~ Width_versicolor)
summary(regresion)
plot(Lenght_versicolor, Width_versicolor, xlab = "Longitud pétalos", ylab = "Anchura pétalos", type = "p", col = "black")
abline(regresion, col = "red")
abline(regresion, col = "red")
plot(Lenght_versicolor, Width_versicolor, xlab = "Longitud pétalos", ylab = "Anchura pétalos", type = "p", col = "black")
abline(regresion, col = "red")
line(regresion)
line(regresion)
plot(regresion)
summary(regresion)
plot(Lenght_versicolor, Width_versicolor, xlab = "Longitud pétalos", ylab = "Anchura pétalos", type = "p", col = "black")
abline(regresion, col = "red")
grasas <- read.table("http://www.uam.es/joser.berrendero/datos/EdadPesoGrasas.txt", header = TRUE)
names(grasas)
pairs(grasas)     # vemos que sí hay relación lineal entre las variables edad y grasas
cor(grasas)
regresion <- lm(Lenght_setosa ~ Width_setosa)
summary(regresion)
plot(Lenght_versicolor, Width_versicolor, xlab = "Longitud pétalos", ylab = "Anchura pétalos", type = "p", col = "black")
title("Setosa", sub = "Relación entre los tamaños de los pétalos", col.main = "cadetblue", font.main = 4, cex.main = 3, col.sub = "grey")
regresion <- lm(Lenght_setosa ~ Width_setosa)
summary(regresion)
plot(Lenght_setosa, Width_setosa, xlab = "Longitud pétalos", ylab = "Anchura pétalos", type = "p", col = "black")
abline(regresion, col = "red")
data(cars)
head(cars)
data(women)
head(women)
heigh = women[heigh]
heigh = women["heigh"]
heigh = women$heigh
weight = women$weight
pair(women)
heigh = women$heigh
weight = women$weight
pair(women)
pairs(women)
jpeg("women pair")
jpeg("women pairs")
pdf("women pairs.pdf")
cor(heigh, weight)
plot(heigh, weight, xlab = "Heigh", ylab = "Weight")
title("Data: women")
cor(heigh, weight)             # 0.9954948
plot(heigh, weight, xlab = "Heigh", ylab = "Weight")
title("Data: women")
cor(heigh, weight)             # 0.9954948
plot(heigh, weight, xlab = "Heigh", ylab = "Weight")
title("Data: women")
regresion <- lm(heigh ~ weight)
summary(regression)
summary(regresion)
abline(regresion, col = "red")
plot(heigh, weight, xlab = "Heigh", ylab = "Weight")
abline(regresion, col = "red")
abline(regresion, col = "red")
plot(heigh, weight, xlab = "Heigh", ylab = "Weight")
abline(regresion, col = "red")
regresion <- lm(heigh ~ weight, data = women)
summary(regresion)
plot(heigh, weight, xlab = "Heigh", ylab = "Weight")
abline(regresion, col = "red")
cor(heigh, weight)             # 0.9954948
plot(heigh, weight, xlab = "Heigh", ylab = "Weight")
title("Data: women")
regresion <- lm(heigh ~ weight, data = women)
summary(regresion)
plot(heigh, weight, xlab = "Heigh", ylab = "Weight")
abline(regresion, col = "red")
grasas <- read.table("http://www.uam.es/joser.berrendero/datos/EdadPesoGrasas.txt", header = TRUE)
names(grasas)
names(grasas)
pairs(grasas)     # vemos que sí hay relación lineal entre las variables edad y grasas
cor(grasas)
regresion <- lm(grasas ~ edad, data = grasas) # grasas = variable respueste, edad = variable regresora o independiente
summary(regresion)
plot(grasas$edad, grasas$grasas, xlab = "Edad", ylab = "Grasas")
abline(regresion)    # Recta de mínimos cuadrados
nuevas.edades <- data.frame(edad = seq(30, 50))
nuevas.edades <- data.frame(edad = seq(30, 50))
predict(regresion, nuevas.edades)
plot(grasas$edad, grasas$grasas, xlab = "Edad", ylab = "Grasas")
abline(regresion)    # Recta de mínimos cuadrados
plot(grasas$edad, grasas$grasas, xlab = "Edad", ylab = "Grasas")
abline(regresion)    # Recta de mínimos cuadrados
nuevas.edades <- data.frame(edad = seq(30, 50))
predict(regresion, nuevas.edades)
weight = women$weight
pairs(women)
pdf("women pairs.pdf")
cor(heigh, weight)             # 0.9954948
plot(heigh, weight, xlab = "Heigh", ylab = "Weight")
title("Data: women")
regresion <- lm(heigh ~ weight, data = women)
summary(regresion)
plot(heigh, weight, xlab = "Heigh", ylab = "Weight")
abline(regresion, col = "red")
plot(heigh, weight, xlab = "Heigh", ylab = "Weight")
title("Data: women")
regresion <- lm(heigh ~ weight, data = women)
summary(regresion)
plot(heigh, weight, xlab = "Heigh", ylab = "Weight")
abline(regresion, col = "red")
regresion <- lm(weight ~ height, data = women)
summary(regresion)
plot(heigh, weight, xlab = "Heigh", ylab = "Weight")
abline(regresion, col = "red")
cor(heigh, weight)             # 0.9954948
plot(heigh, weight, xlab = "Heigh", ylab = "Weight")
title("Data: women")
regresion <- lm(weight ~ height, data = women)
summary(regresion)
plot(heigh, weight, xlab = "Heigh", ylab = "Weight")
abline(regresion, col = "red")
plot(heigh, weight, xlab = "Heigh", ylab = "Weight", main = "Data: women")
abline(regresion, col = "red")
setwd("~/Documents/Programación/GIT/Machine-Learning/Self-work R")
confint(regresion, level = .9)
new.heigh <- data.frame(heigh = seq(65, 90))
ic <- predict(regresion, new.heigh, interval = "confidence")
new.heigh <- data.frame(heigh = seq(65, 90))
plot(heigh, weight, xlab = "Heigh", ylab = "Weight", main = "Data: women")
abline(regresion, col = "red")
ic <- predict(regresion, new.heigh, interval = "confidence")
plot(heigh, weight, xlab = "Heigh", ylab = "Weight")
title("Data: women")
regresion <- lm(weight ~ height, data = women)
summary(regresion)
plot(heigh, weight, xlab = "Heigh", ylab = "Weight", main = "Data: women")
abline(regresion, col = "red")
confint(regresion, level = .9)
new.heigh <- data.frame(heigh = seq(65, 90))
plot(heigh, weight, xlab = "Heigh", ylab = "Weight", main = "Data: women")
abline(regresion, col = "red")
ic <- predict(regresion, new.heigh, interval = "confidence")
new.heigh <- data.frame(heigh = seq(65, 90))
plot(heigh, weight, xlab = "Heigh", ylab = "Weight", main = "Data: women")
abline(regresion, col = "red")
ic <- predict(regresion, new.heigh, interval = "confidence")
class(new.heigh)
head(new.heigh)
ic <- predict(regresion, new.heigh, interval = "confidence")
regresion <- lm(weight ~ heigh, data = women)
summary(regresion)
plot(heigh, weight, xlab = "Heigh", ylab = "Weight", main = "Data: women")
abline(regresion, col = "red")
confint(regresion, level = .9)
new.heigh <- data.frame(heigh = seq(65, 90))
class(new.heigh)
head(new.heigh)
plot(heigh, weight, xlab = "Heigh", ylab = "Weight", main = "Data: women")
abline(regresion, col = "red")
ic <- predict(regresion, new.heigh, interval = "confidence")
lines(new.heigh$heigh, ic[, 2], lty = 2)
lines(new.heigh$heigh, ic[, 2], lty = 2, col = "blue")
lines(new.heigh$heigh, ic[, 3]. lty = 2, col = "blue")
lines(new.heigh$heigh, ic[, 3]. lty = 2, col = "blue")
ic <- predict(regresion, new.heigh, interval = "confidence")
lines(new.heigh$heigh, ic[, 2], lty = 2, col = "blue")
lines(new.heigh$heigh, ic[, 3],  lty = 2, col = "blue")
ic <- predict(regresion, new.heigh, interval = "confidence")
lines(new.heigh$heigh, ic[, 2], lty = 2, col = "blue")
lines(new.heigh$heigh, ic[, 3], lty = 2, col = "blue")
ic <- predict(regresion, new.heigh, interval = "prediction")
lines(new.heigh$heigh, ic[, 2], lty = 2, col = "green")
lines(new.heigh$heigh, ic[, 3], lty = 2, col = "green")
new.heigh <- data.frame(heigh = seq(58, 72))
class(new.heigh)
head(new.heigh)
plot(heigh, weight, xlab = "Heigh", ylab = "Weight", main = "Data: women")
abline(regresion, col = "red")
ic <- predict(regresion, new.heigh, interval = "confidence")
lines(new.heigh$heigh, ic[, 2], lty = 2, col = "blue")
lines(new.heigh$heigh, ic[, 3], lty = 2, col = "blue")
ic <- predict(regresion, new.heigh, interval = "prediction")
lines(new.heigh$heigh, ic[, 2], lty = 2, col = "green")
lines(new.heigh$heigh, ic[, 3], lty = 2, col = "green")
legend("above", legend = c("Regression Line", "Confidence interval", "Prediction interval"), col = c("red", "blue", "green"))
legend("bottomright", legend = c("Regression Line", "Confidence interval", "Prediction interval"), col = c("red", "blue", "green"))
legend("bottomright", legend = c("Regression Line", "Confidence interval", "Prediction interval"), col = c("red", "blue", "green"), lty = 1:2, cex = .8)
ic <- predict(regresion, new.heigh, interval = "prediction")
lines(new.heigh$heigh, ic[, 2], lty = 2, col = "green")
lines(new.heigh$heigh, ic[, 3], lty = 2, col = "green")
legend("bottomright", legend = c("Regression Line", "Confidence interval", "Prediction interval"), col = c("red", "blue", "green"), lty = 1:2, cex = .8)
confint(regresion, level = .9)
new.heigh <- data.frame(heigh = seq(58, 72))
class(new.heigh)
head(new.heigh)
plot(heigh, weight, xlab = "Heigh", ylab = "Weight", main = "Data: women")
abline(regresion, col = "red")
ic <- predict(regresion, new.heigh, interval = "confidence")
lines(new.heigh$heigh, ic[, 2], lty = 2, col = "blue")
lines(new.heigh$heigh, ic[, 3], lty = 2, col = "blue")
ic <- predict(regresion, new.heigh, interval = "prediction")
lines(new.heigh$heigh, ic[, 2], lty = 2, col = "green")
lines(new.heigh$heigh, ic[, 3], lty = 2, col = "green")
legend("bottomright", legend = c("Regression Line", "Confidence interval", "Prediction interval"), col = c("red", "blue", "green"), lty = 1:2, cex = .8)
legend("rightright", legend = c("Regression Line", "Confidence interval", "Prediction interval"), col = c("red", "blue", "green"), lty = 1:2, cex = .8)
ic <- predict(regresion, new.heigh, interval = "prediction")
lines(new.heigh$heigh, ic[, 2], lty = 2, col = "green")
lines(new.heigh$heigh, ic[, 3], lty = 2, col = "green")
legend("rightright", legend = c("Regression Line", "Confidence interval", "Prediction interval"), col = c("red", "blue", "green"), lty = 1:2, cex = .8)
legend("right", legend = c("Regression Line", "Confidence interval", "Prediction interval"), col = c("red", "blue", "green"), lty = 1:2, cex = .8)
new.heigh <- data.frame(heigh = seq(58, 72))
class(new.heigh)
head(new.heigh)
plot(heigh, weight, xlab = "Heigh", ylab = "Weight", main = "Data: women")
abline(regresion, col = "red")
ic <- predict(regresion, new.heigh, interval = "confidence")
lines(new.heigh$heigh, ic[, 2], lty = 2, col = "blue")
lines(new.heigh$heigh, ic[, 3], lty = 2, col = "blue")
ic <- predict(regresion, new.heigh, interval = "prediction")
lines(new.heigh$heigh, ic[, 2], lty = 2, col = "green")
lines(new.heigh$heigh, ic[, 3], lty = 2, col = "green")
legend("right", legend = c("Regression Line", "Confidence interval", "Prediction interval"), col = c("red", "blue", "green"), lty = 1:2, cex = .8)
